// Generated by CoffeeScript 1.10.0
var config, misc, msgCache, pq, quotes,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

pq = require('../lib/promise');

quotes = require('../lib/quotes');

msgCache = require('../lib/msg_cache');

misc = require('../lib/misc');

config = require('../lib/config');

module.exports = {
  name: 'Quotes (get)',
  pattern: /!(q|qq|ц|цц|цитата|quote|удали|del|delete|stats)(?:\s+(.+))?$/,
  init: function() {
    quotes.init();
    return this.sudoList = config.toIdList(config.options.quotes_sudo);
  },
  onMsg: function(msg) {
    var _last, _savedNames, cmd, hdr, i, len, num, ownerId, quote, rating, ratingStr, reply, savedName, savedNames, sn, txt;
    cmd = msg.match[1].toLowerCase();
    if (cmd === 'удали' || cmd === 'del' || cmd === 'delete') {
      if (!this.checkSudo(msg)) {
        return;
      }
      num = misc.tryParseInt(msg.match[2]);
      if (num == null) {
        return;
      }
      quote = quotes.getByNumber(num);
      if (quote == null) {
        msg.reply("Цитата с номером " + num + " не найдена.");
        return;
      }
      if (quote.posterId !== msg.from.id && !this.bot.isSudo(msg)) {
        msg.reply("Нельзя удалять чужие цитаты.");
        return;
      }
      quotes.delQuote(num);
      msg.reply("Цитата " + num + " удалена.");
      return;
    }
    if (msg.reply_to_message != null) {
      reply = msg.reply_to_message;
      if (reply.forward_from != null) {
        ownerId = reply.forward_from.id;
      } else {
        ownerId = reply.from.id;
      }
    } else {
      ownerId = null;
    }
    if (cmd === 'stats') {
      msg.send(quotes.getStats(ownerId, msg.match[2]));
      return;
    }
    quotes.updateUsers();
    if (msg.match[2] != null) {
      txt = msg.match[2].trim();
      num = null;
      if (txt.endsWith('+')) {
        num = misc.tryParseInt(txt.substr(0, txt.length - 1));
        if (num != null) {
          quote = quotes.getByNumberPlus(num);
        }
      }
      if (num == null) {
        num = misc.tryParseInt(txt);
        if (num != null) {
          quote = quotes.getByNumber(num);
        } else {
          quote = quotes.getByText(msg.match[2].trim(), ownerId);
        }
      }
    } else {
      if (ownerId != null) {
        quote = quotes.getByOwnerId(ownerId);
      } else {
        quote = quotes.getRandom({
          onlyPositive: cmd === 'qq' || cmd === 'цц'
        });
      }
    }
    if (quote != null) {
      hdr = "<b>Цитата №" + quote.num + "</b>";
      if (quote.version <= 2) {
        savedName = quote.saved_name;
      } else {
        _savedNames = quote.messages.map(function(mm) {
          return mm.saved_name;
        }).filter(function(n) {
          return n != null;
        });
        _last = null;
        savedNames = [];
        for (i = 0, len = _savedNames.length; i < len; i++) {
          sn = _savedNames[i];
          if (sn !== _last) {
            _last = sn;
            savedNames.push(sn);
          }
        }
        savedName = savedNames.join(", ");
      }
      if (quote.version < 5) {
        hdr += " (архив)";
      } else {
        if ((savedName != null) && savedName !== "") {
          hdr += " (" + savedName + ")";
        }
      }
      rating = quotes.getRating(quote.num);
      if (rating > 0) {
        ratingStr = "+" + rating;
      } else {
        ratingStr = "" + rating;
      }
      hdr += " [ " + ratingStr + " ]";
      if (quote.posterName != null) {
        hdr += " от <i>" + quote.posterName + "</i>";
      }
      hdr += " " + quotes.THUMBS_UP + " /Opy_" + quote.num + " " + quotes.THUMBS_DOWN + " /He_opu_" + quote.num;
      quotes.setLastQuote(msg.chat.id, quote.num);
      return msg.send(hdr, {
        parseMode: 'HTML'
      }).then((function(_this) {
        return function() {
          var buf, fwdFunc, kekerName, ref;
          if (quote.version >= 5) {
            fwdFunc = function(msgIndex) {
              if (msgIndex < quote.messages.length) {
                return msg.forward(quote.messages[msgIndex].id, quote.messages[msgIndex].chat_id).then(function() {
                  return fwdFunc(msgIndex + 1);
                });
              }
            };
            return fwdFunc(0);
          } else {
            if (quote.version >= 3) {
              fwdFunc = function(msgIndex) {
                var buf, kekerName, message, ref;
                if (msgIndex < quote.messages.length) {
                  message = quote.messages[msgIndex];
                  kekerName = (ref = message.saved_name) != null ? ref : message.sender_name;
                  buf = "<i>" + (kekerName.replace('_', ' ')) + "</i>\n";
                  if (message.text != null) {
                    buf += message.text;
                    return msg.send(buf, {
                      parseMode: 'HTML'
                    }).then(function() {
                      return fwdFunc(msgIndex + 1);
                    });
                  } else {
                    return fwdFunc(msgIndex + 1);
                  }
                }
              };
              return fwdFunc(0);
            } else {
              kekerName = (ref = quote.saved_name) != null ? ref : quote.sender_name;
              buf = '';
              if (quote.reply_text != null) {
                buf += '&gt; ' + quote.reply_text.replace(/\n/g, '\n> ') + "\n\n";
              }
              buf += "<i>" + (kekerName.replace('_', ' ')) + "</i>\n";
              buf += quote.text;
              return msg.send(buf, {
                parseMode: 'HTML'
              });
            }
          }
        };
      })(this));
    } else {
      return msg.reply('Цитата не найдена :(');
    }
  },
  isSudo: function(msg) {
    var ref;
    return this.bot.isSudo(msg) || (ref = msg.from.id, indexOf.call(this.sudoList, ref) >= 0);
  }
};
