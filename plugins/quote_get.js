// Generated by CoffeeScript 1.9.1
var misc, msgCache, pq, quotes;

pq = require('../lib/promise');

quotes = require('../lib/quotes');

msgCache = require('../lib/msg_cache');

misc = require('../lib/misc');

module.exports = {
  name: 'Quotes (get)',
  pattern: /!(q|цитата|quote|удали|stats)(?:\s+(.+))?$/,
  init: function() {
    return quotes.init();
  },
  onMsg: function(msg) {
    var hdr, num, ownerId, quote, reply, savedName, txt;
    if (msg.match[1].toLowerCase() === 'удали') {
      if (!this.checkSudo(msg)) {
        return;
      }
      num = misc.tryParseInt(msg.match[2]);
      if (num == null) {
        return;
      }
      quote = quotes.getByNumber(num);
      if (quote == null) {
        msg.reply("Цитата с номером " + num + " не найдена.");
        return;
      }
      if (quote.posterId !== msg.from.id && !this.bot.isSudo(msg)) {
        msg.reply("Нельзя удалять чужие цитаты.");
        return;
      }
      quotes.delQuote(num);
      msg.reply("Цитата " + num + " удалена.");
      return;
    }
    if (msg.match[1].toLowerCase() === 'stats') {
      msg.send(quotes.getStats(msg.match[2]));
      return;
    }
    quotes.updateUsers();
    if (msg.reply_to_message != null) {
      reply = msg.reply_to_message;
      if (reply.forward_from != null) {
        ownerId = reply.forward_from.id;
      } else {
        ownerId = reply.from.id;
      }
    } else {
      ownerId = null;
    }
    if (msg.match[2] != null) {
      txt = msg.match[2].trim();
      num = null;
      if (txt.endsWith('+')) {
        num = misc.tryParseInt(txt.substr(0, txt.length - 1));
        if (num != null) {
          quote = quotes.getByNumberPlus(num);
        }
      }
      if (num == null) {
        num = misc.tryParseInt(txt);
        if (num != null) {
          quote = quotes.getByNumber(num);
        } else {
          quote = quotes.getByText(msg.match[2].trim(), ownerId);
        }
      }
    } else {
      if (ownerId != null) {
        quote = quotes.getByOwnerId(ownerId);
      } else {
        quote = quotes.getRandom();
      }
    }
    if (quote != null) {
      hdr = "Цитата №" + quote.num;
      if (quote.version <= 2) {
        savedName = quote.saved_name;
      } else {
        savedName = quote.messages.map(function(mm) {
          return mm.saved_name;
        }).filter(function(n) {
          return n != null;
        }).join(", ");
      }
      if ((savedName != null) && savedName !== "") {
        hdr += " (" + savedName + ")";
      }
      return msg.send(hdr).then(function() {
        var buf, fwdFunc, replyP;
        if (quote.version != null) {
          if (quote.version === 2) {
            if (quote.reply_id != null) {
              replyP = msg.forward(quote.reply_id, quote.reply_chat_id);
            } else {
              replyP = pq.resolved();
            }
            return replyP.then(function() {
              return msg.forward(quote.id, quote.chat_id);
            });
          } else if (quote.version >= 3) {
            fwdFunc = function(msgIndex) {
              if (msgIndex < quote.messages.length) {
                return msg.forward(quote.messages[msgIndex].id, quote.messages[msgIndex].chat_id).then(function() {
                  return fwdFunc(msgIndex + 1);
                });
              }
            };
            return fwdFunc(0);
          }
        } else {
          buf = (quote.sender_name.replace('_', ' ')) + ":\n\n";
          if (quote.reply_text != null) {
            buf += '> ' + quote.reply_text.replace(/\n/g, '\n> ') + "\n";
          }
          buf += quote.text;
          return msg.send(buf);
        }
      });
    } else {
      return msg.reply('Цитата не найдена :(');
    }
  }
};
